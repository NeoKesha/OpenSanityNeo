;;Common macro

TwinMain MACRO arg1, arg2
    main PROC c
	IFDEF DEBUG_ENABLED
		DEBUG_PROLOGUE_MACRO
		CALL DBG_INIT
		DEBUG_EPILOGUE_MACRO
	ENDIF
	TwinCall FUN_000C62A4
ENDM

TwinProcThiscall MACRO procName, arg2
	procName PROC stdcall
	IFDEF DEBUG_ENABLED
		DEBUG_PROLOGUE_MACRO
		PUSH EAX
		MOV EAX, OFFSET @CatStr(<DBG_>, procName)
		MOV [?debugCurrentFunction@@3PADA], EAX
		POP EAX
		DEBUG_HEADER_MACRO
		DEBUG_EPILOGUE_MACRO
	ENDIF
ENDM

TwinProc MACRO procName, arg2
    procName PROC arg2
	IFDEF DEBUG_ENABLED
		DEBUG_PROLOGUE_MACRO
		PUSH EAX
		MOV EAX, OFFSET @CatStr(<DBG_>, procName)
		MOV [?debugCurrentFunction@@3PADA], EAX
		POP EAX
		DEBUG_HEADER_MACRO
		DEBUG_EPILOGUE_MACRO
	ENDIF
ENDM

TwinProcEnd MACRO procName
    procName ENDP
ENDM

TwinCall MACRO procName
	CALL procName
ENDM

TwinProcExit MACRO arg1
    RET arg1  
ENDM


;;Debug macro
DEBUG_STACK_PROTECT_START MACRO
    push    STACK_CANARY      
ENDM

DEBUG_STACK_PROTECT_END MACRO
	MOV dword ptr [DBG_TMP_BUFFER], EAX
    MOV EAX, [ESP]           
    CMP EAX, STACK_CANARY   
	MOV EAX, dword ptr [DBG_TMP_BUFFER]
    JNE stack_corrupted   
    ADD ESP, 4              
ENDM

DEBUG_PROLOGUE_MACRO MACRO
	PUSHA
	PUSHFD
	FXSAVE [DBG_FPU_STATE]
ENDM

DEBUG_HEADER_MACRO MACRO
	IFDEF DEBUG_CALLLOG
	CALL DBG_CALLLOG
	ENDIF
	
	IFDEF DEBUG_REG_FUNC
	CALL DBG_REGISTER_FUNCTION
	ENDIF
	
	IFDEF DEBUG_FPU_MONITOR
	CALL DBG_CHECK_FPU_STATE
	ENDIF
ENDM

DEBUG_HEADER_THISCALL_MACRO MACRO
	PUSH ECX
	IFDEF DEBUG_CALLLOG
	CALL DBG_CALLLOG
	ENDIF
	
	IFDEF DEBUG_REG_FUNC
	CALL DBG_REGISTER_FUNCTION
	ENDIF
	
	IFDEF DEBUG_FPU_MONITOR
	CALL DBG_CHECK_FPU_STATE
	ENDIF
	POP ECX
	
	IFDEF DEBUG_THIS_PRINT
	MOV EAX, [ECX]
	MOV [?_this@@3PAXA], EAX
	CALL DBG_PRINT_THIS
	ENDIF
ENDM

DEBUG_EPILOGUE_MACRO MACRO
	FXRSTOR [DBG_FPU_STATE]
	POPFD
	POPA
ENDM